body{
  background-color: rgba(217, 164, 17, 0.5);
}

.form_container{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    flex-direction: row;
}
.form_card{
    width: 50vw;
    height: 90%;
    /* margin: 20px; */
    border-radius: 6px;
    background: #fff;
    box-shadow: 0 1px 10px rgba(0, 0, 0, 0.4);
    transition: all 0.5s ease;
}
.first_column{
    display: flex;
    justify-content: space-around;
    /* flex-direction: row; */
    margin-top: 15px;
}
.single_input{
    display: flex;
    flex-direction: column;
}
.second_column{
    display: flex;
    justify-content: space-around;
    /* flex-direction: row; */
    margin-top: 10px;

}
.third_column{
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 40px;
}

.genres_select, .name_input,
.data_input, .date_input,
.platforms_input, .description_input,
.img_url{
    width: 250px;
    height: 30px;
    border-radius: 5px;
    background-color: rgb(232, 241, 242);
}
.description_input{
    width: 500px;
    height: 200px;
}
.fourth_column{
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 15px;
}
/* codepen */


/*shows the stars side by side, centered, and in reverse order than the HMTL*/
.rating {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin-top: 30px;
  }
  

  /*style the empty stars, sets position:relative as base for pseudo-elements*/
  .rating > span {
    position: relative;
    width: 1.1em;
    font-size: 45px;
    color: #FFD700;
    cursor: pointer;
  }
  
  /* sets filled star pseudo-elements */
  .rating > label::before{ 
    content: "\2605";
    position: absolute;
    opacity: 0;
  }
  /*overlays a filled start character to the hovered element and all previous siblings*/
  .rating > label:hover:before,
  .rating > label:hover ~ label:before {
    opacity: 1 !important;
  }
  
  /*overlays a filled start character on the selected element and all previous siblings*/
  .rating > input:checked ~ label:before{
    opacity:1;
  }
  
    /*when an element is selected and pointer re-enters the rating container, selected rate and siblings get semi transparent, as reminder of current selection*/
    .rating:hover > input:checked ~ label:before{ opacity: 0.4; }
  
.rating > p {
  font-size: 1.1em;
  align-self: center;
  margin-right: 20px;
}
.div_create{
  margin-top: 20px;
  display: flex;
  justify-content: center;

}
.btn_create{
  position: relative;
  border-radius: 25px 25px 25px 25px;
  width: 150px;
  height: 50px;
  border: none;
  outline: none;
  cursor: pointer;
  background: #ffc107;
  color: #fff;
  margin-right: 20px;
}
.btn_createDisabled{
  position: relative;
  border-radius: 25px 25px 25px 25px;
  border: 1px #ffc107;
  width: 150px;
  height: 50px;
  /* border: none; */
  /* outline: none; */
  cursor:not-allowed ;
  background: rgb(237, 236, 232);
  color: #ffc107;
  margin-right: 20px;
}
.selected_options{
  display: flex;
  flex-direction: row;
}
.btn_selected{
  background: #ffc107;
  width: 60px;
  height: 30px;
  border-radius: 20px 20px 20px 20px;
  cursor: pointer;
  color: #fff;
}

.errors{
  color: red;
  font-size: 14px;
  font-style: bold;
}